{"ast":null,"code":"import { format, startOfWeek, endOfWeek, isWithinInterval } from 'date-fns';\nconst STORAGE_KEYS = {\n  DAILY_DATA: 'delivery-tracker-daily-data',\n  STORES: 'delivery-tracker-stores',\n  SETTINGS: 'delivery-tracker-settings'\n};\nexport class StorageManager {\n  static getDailyData() {\n    try {\n      const data = localStorage.getItem(STORAGE_KEYS.DAILY_DATA);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error('Error loading daily data:', error);\n      return [];\n    }\n  }\n  static saveDailyData(data) {\n    try {\n      localStorage.setItem(STORAGE_KEYS.DAILY_DATA, JSON.stringify(data));\n    } catch (error) {\n      console.error('Error saving daily data:', error);\n    }\n  }\n  static getStores() {\n    try {\n      const data = localStorage.getItem(STORAGE_KEYS.STORES);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error('Error loading stores:', error);\n      return [];\n    }\n  }\n  static saveStores(stores) {\n    try {\n      localStorage.setItem(STORAGE_KEYS.STORES, JSON.stringify(stores));\n    } catch (error) {\n      console.error('Error saving stores:', error);\n    }\n  }\n  static getTodayData() {\n    const allData = this.getDailyData();\n    const today = format(new Date(), 'yyyy-MM-dd');\n    return allData.find(data => data.date === today) || null;\n  }\n  static getWeekData() {\n    const allData = this.getDailyData();\n    const now = new Date();\n    const weekStart = startOfWeek(now, {\n      weekStartsOn: 1\n    });\n    const weekEnd = endOfWeek(now, {\n      weekStartsOn: 1\n    });\n    return allData.filter(data => {\n      const dataDate = new Date(data.date);\n      return isWithinInterval(dataDate, {\n        start: weekStart,\n        end: weekEnd\n      });\n    });\n  }\n  static createEmptyDailyData(date) {\n    return {\n      date: format(date, 'yyyy-MM-dd'),\n      deliveries: [],\n      summary: {\n        totalStores: 0,\n        totalDeliveries: 0,\n        totalDelivered: 0,\n        totalPending: 0,\n        totalBills: 0,\n        totalRevenue: 0,\n        totalPaid: 0,\n        totalOutstanding: 0\n      }\n    };\n  }\n  static updateDailyData(updatedData) {\n    const allData = this.getDailyData();\n    const existingIndex = allData.findIndex(data => data.date === updatedData.date);\n    if (existingIndex >= 0) {\n      allData[existingIndex] = updatedData;\n    } else {\n      allData.push(updatedData);\n    }\n\n    // Sort by date descending\n    allData.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    this.saveDailyData(allData);\n  }\n  static calculateSummary(deliveries) {\n    return deliveries.reduce((summary, delivery) => ({\n      totalStores: summary.totalStores + 1,\n      totalDeliveries: summary.totalDeliveries + delivery.totalDeliveries,\n      totalDelivered: summary.totalDelivered + delivery.delivered,\n      totalPending: summary.totalPending + delivery.pending,\n      totalBills: summary.totalBills + delivery.bills,\n      totalRevenue: summary.totalRevenue + delivery.paymentStatus.total,\n      totalPaid: summary.totalPaid + delivery.paymentStatus.paid,\n      totalOutstanding: summary.totalOutstanding + delivery.paymentStatus.pending + delivery.paymentStatus.overdue\n    }), {\n      totalStores: 0,\n      totalDeliveries: 0,\n      totalDelivered: 0,\n      totalPending: 0,\n      totalBills: 0,\n      totalRevenue: 0,\n      totalPaid: 0,\n      totalOutstanding: 0\n    });\n  }\n}","map":{"version":3,"names":["format","startOfWeek","endOfWeek","isWithinInterval","STORAGE_KEYS","DAILY_DATA","STORES","SETTINGS","StorageManager","getDailyData","data","localStorage","getItem","JSON","parse","error","console","saveDailyData","setItem","stringify","getStores","saveStores","stores","getTodayData","allData","today","Date","find","date","getWeekData","now","weekStart","weekStartsOn","weekEnd","filter","dataDate","start","end","createEmptyDailyData","deliveries","summary","totalStores","totalDeliveries","totalDelivered","totalPending","totalBills","totalRevenue","totalPaid","totalOutstanding","updateDailyData","updatedData","existingIndex","findIndex","push","sort","a","b","getTime","calculateSummary","reduce","delivery","delivered","pending","bills","paymentStatus","total","paid","overdue"],"sources":["/Users/pavan/Desktop/Del update/src/utils/storage.ts"],"sourcesContent":["import { DailyData, Store, Delivery } from '../types';\nimport { format, startOfWeek, endOfWeek, isWithinInterval } from 'date-fns';\n\nconst STORAGE_KEYS = {\n  DAILY_DATA: 'delivery-tracker-daily-data',\n  STORES: 'delivery-tracker-stores',\n  SETTINGS: 'delivery-tracker-settings'\n};\n\nexport class StorageManager {\n  static getDailyData(): DailyData[] {\n    try {\n      const data = localStorage.getItem(STORAGE_KEYS.DAILY_DATA);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error('Error loading daily data:', error);\n      return [];\n    }\n  }\n\n  static saveDailyData(data: DailyData[]): void {\n    try {\n      localStorage.setItem(STORAGE_KEYS.DAILY_DATA, JSON.stringify(data));\n    } catch (error) {\n      console.error('Error saving daily data:', error);\n    }\n  }\n\n  static getStores(): Store[] {\n    try {\n      const data = localStorage.getItem(STORAGE_KEYS.STORES);\n      return data ? JSON.parse(data) : [];\n    } catch (error) {\n      console.error('Error loading stores:', error);\n      return [];\n    }\n  }\n\n  static saveStores(stores: Store[]): void {\n    try {\n      localStorage.setItem(STORAGE_KEYS.STORES, JSON.stringify(stores));\n    } catch (error) {\n      console.error('Error saving stores:', error);\n    }\n  }\n\n  static getTodayData(): DailyData | null {\n    const allData = this.getDailyData();\n    const today = format(new Date(), 'yyyy-MM-dd');\n    return allData.find(data => data.date === today) || null;\n  }\n\n  static getWeekData(): DailyData[] {\n    const allData = this.getDailyData();\n    const now = new Date();\n    const weekStart = startOfWeek(now, { weekStartsOn: 1 });\n    const weekEnd = endOfWeek(now, { weekStartsOn: 1 });\n    \n    return allData.filter(data => {\n      const dataDate = new Date(data.date);\n      return isWithinInterval(dataDate, { start: weekStart, end: weekEnd });\n    });\n  }\n\n  static createEmptyDailyData(date: Date): DailyData {\n    return {\n      date: format(date, 'yyyy-MM-dd'),\n      deliveries: [],\n      summary: {\n        totalStores: 0,\n        totalDeliveries: 0,\n        totalDelivered: 0,\n        totalPending: 0,\n        totalBills: 0,\n        totalRevenue: 0,\n        totalPaid: 0,\n        totalOutstanding: 0\n      }\n    };\n  }\n\n  static updateDailyData(updatedData: DailyData): void {\n    const allData = this.getDailyData();\n    const existingIndex = allData.findIndex(data => data.date === updatedData.date);\n    \n    if (existingIndex >= 0) {\n      allData[existingIndex] = updatedData;\n    } else {\n      allData.push(updatedData);\n    }\n    \n    // Sort by date descending\n    allData.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    \n    this.saveDailyData(allData);\n  }\n\n  static calculateSummary(deliveries: Delivery[]): DailyData['summary'] {\n    return deliveries.reduce((summary, delivery) => ({\n      totalStores: summary.totalStores + 1,\n      totalDeliveries: summary.totalDeliveries + delivery.totalDeliveries,\n      totalDelivered: summary.totalDelivered + delivery.delivered,\n      totalPending: summary.totalPending + delivery.pending,\n      totalBills: summary.totalBills + delivery.bills,\n      totalRevenue: summary.totalRevenue + delivery.paymentStatus.total,\n      totalPaid: summary.totalPaid + delivery.paymentStatus.paid,\n      totalOutstanding: summary.totalOutstanding + delivery.paymentStatus.pending + delivery.paymentStatus.overdue\n    }), {\n      totalStores: 0,\n      totalDeliveries: 0,\n      totalDelivered: 0,\n      totalPending: 0,\n      totalBills: 0,\n      totalRevenue: 0,\n      totalPaid: 0,\n      totalOutstanding: 0\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}